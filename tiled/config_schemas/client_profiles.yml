# This schema (a jsonschema in YAML format) is used
# for validating configuration.
#
# This schema is also used by our documentation system to build the
# client profile reference section based on the description fields. See
# doc/source/conf.py for that logic!
#
# We look to document all the options, but we don't look to enforce the perfect
# validation logic within this file.
#
# ref: https://json-schema.org/learn/getting-started-step-by-step.html
#
$schema": http://json-schema.org/draft-07/schema#
type: object
additionalProperties: false
"oneOf": [
  {
    "required": [
      "uri"
    ]
  },
  {
    "required": [
      "direct"
    ]
  },
]
properties:
  uri:
    type: string
    description: |
      URI of a Tiled server, such as

          http://localhost:8000/api
  username:
    type: string
    description: |
      For authenticated Trees. Optional unless the Tree requires authentication.
  auth_provider:
    type: string
    description: |
      Authentication provider. If unspecified and there are multiple providers
      supported by the server, the client will prompt the user to choose one.
  headers:
    type: object
    additionalProperties: true
    description: |
      Extra HTTP headers
  offline:
    type: boolean
    description: |
      False by default. When true, rely solely on cache. Do not attempt to connect to server.
  direct:
    type: object
    description:
      In-line service configuration.
      See Service Configuration reference.
  structure_clients:
    anyOf: [
      {"type": "string", "enum": ["numpy", "dask"]},
      {
        "type": "object",
        "properties": {
          "array": {"type": "string"},
          "dataframe": {"type": "string"},
          "variable": {"type": "string"},
          "xarray_data_array": {"type": "string"},
          "xarray_dataset": {"type": "string"}
        }
      }
    ]
    description: |
      Client to read structure into.
      Default ("numpy") uses numpy arrays, pandas DataFrames, and xarrays backed
      by numpy arrays.

      ```yaml
      structure_clients: "numpy"
      ```

      The "dask" option uses the dask-based analogues of
      these.

      ```yaml
      structure_clients: "dask"
      ```

      To use custom clients, map each structure family or spec you want to support
      to an import path:

      ```yaml
      structure_clients:
        array: "package.module:CustomArrayClient"
        dataframe: "package.module:CustomDataFrameClient"
        my_custom_spec: "package.module:CUstomClient"
      ```
  cache:
    type: object
    additionalProperties: false
    properties:
      # These properties are mutually exclusive, but encoding this
      # in jsonschema is complex and therefore in tension with the goal
      # of this file stated at the top. The mutual exclusion *is* enforced,
      # but in the Python code that parses the profiles, not here.
      memory:
        type: object
        anyOf:
          - required:
            - capacity
          - required:
            - available_bytes  # deprecated alias for 'capacity'
        properties:
          capacity:
            type: number
            description: |
              Maximum memory (in bytes) that the cache may consume.

              For readability it is recommended to use `_` for thousands separators.
              Example:

              ```yaml
              available_bytes: 2_000_000_000  # 2GB
              ```

          available_bytes:
            type: number
            description: Deprecated alias for "capacity"
      disk:
        type: object
        required:
          - path
        properties:
          path:
            type: string
            description: |
              A directory will be created at this path if it does not yet exist.
              It is safe to reuse an existing cache directory and to share a cache
              directory between multiple processes.
              available_bytes:
          capacity:
            type: number
            description: |
              Maximum storage space (in bytes) that the cache may consume.

              For readability it is recommended to use `_` for thousands separators.
              Example:

              ```yaml
              available_bytes: 2_000_000_000  # 2GB
              ```

          available_bytes:
            type: number
            description: Deprecated alias for "capacity"
  token_cache:
    type: string
    description: |
      Filepath to directory of access tokens.
      Default location is usually suitable.
      The default is system-dependent and can be inspected at
      `tiled.client.context.DEFAULT_TOKEN_CACHE`.
  verify:
    type: boolean
    description: |
      Set to False to disable SSL verification.

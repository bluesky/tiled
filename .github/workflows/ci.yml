name: CI

on:
  pull_request:
  push:
    branches:
    - main
  schedule:
      - cron: '00 4 * * *'  # daily at 4AM

env:
  TEST_TAG: bluesky/tiled:test

jobs:
  pre-commit:
    name: Static Code Checks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: pre-commit/action@v3.0.0

  linux_checks:

    name: Test on Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
      fail-fast: false
    steps:

    - uses: actions/checkout@v3

    - name: Install uv and set the python version
      uses: astral-sh/setup-uv@v6
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install tiled
      run: uv sync --all-extras

    - name: Start LDAP service in container.
      shell: bash -l {0}
      run: source continuous_integration/scripts/start_LDAP.sh

    - name: Download SQLite example data.
      shell: bash -l {0}
      run: source continuous_integration/scripts/download_sqlite_data.sh

    - name: Start PostgreSQL service in container.
      shell: bash -l {0}
      run: source continuous_integration/scripts/start_postgres.sh


    - name: Ensure example data is migrated to current catalog database schema.
      # The example data is expected to be kept up to date to the latest Tiled
      # release, but this CI run may include some unreleased schema changes,
      # so we run a migration here.
      shell: bash -l {0}
      run: |
        set -vxeuo pipefail
        uv run tiled catalog upgrade-database sqlite:///tiled_test_db_sqlite.db
        uv run tiled catalog upgrade-database postgresql://postgres:secret@localhost:5432/tiled-example-data

    - name: Test with pytest
      shell: bash -l {0}
      run: |
        set -vxeuo pipefail
        uv run coverage run -m pytest -v
        uv run coverage report -m
      env:
        # Provide test suite with a PostgreSQL database to use.
        TILED_TEST_POSTGRESQL_URI: postgresql://postgres:secret@localhost:5432
        # Opt in to LDAPAuthenticator tests.
        TILED_TEST_LDAP: 1

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        name: ${{ inputs.python-version }}/${{ inputs.runs-on }}
        files: cov.xml
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  windows_checks:
    name: Test on Windows
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.12"]
      fail-fast: false
    steps:

    - uses: actions/checkout@v3

    - name: Install uv and set the python version
      uses: astral-sh/setup-uv@v6
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install tiled
      run: uv sync --all-extras
      env:
        TILED_BUILD_SKIP_UI: 1

    - name: Test with pytest
      run: uv run pytest -v

  container_canary:
    name: Build and validate container
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install Container Canary
      run: |
        curl -L https://github.com/NVIDIA/container-canary/releases/download/v0.2.1/canary_linux_amd64 > /usr/local/bin/canary
        chmod +x /usr/local/bin/canary

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435  # v3

    - name: Build Docker image on multiple arch
      uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83  # v6
      with:
        context: .
        file: Dockerfile
        platforms: linux/amd64,linux/arm64

    - name: Tag and load Docker image on single arch for testing (will use cache)
      uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83  # v6
      with:
        load: true
        push: false
        tags: ${{ env.TEST_TAG }}

    - name: Validate container
      run: |
        canary validate --file canary-validator.yml ${{ env.TEST_TAG }}

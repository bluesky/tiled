name: CI

on:
  pull_request:
  push:
    branches:
    - main
  schedule:
      - cron: '00 4 * * *'  # daily at 4AM

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: "3.x"
        cache: 'pip'
    - uses: pre-commit/action@v3.0.0

  linux_checks:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
        - "3.8"
        - "3.9"
        - "3.10"
        - "3.11"
        - "3.12"
      fail-fast: false
    steps:

    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install
      shell: bash -l {0}
      run: source continuous_integration/scripts/install.sh

    - name: Install test requirements
      shell: bash -l {0}
      run: |
        set -vxeuo pipefail
        python -m pip install .[dev]
        python -m pip list

    - name: Start LDAP service in container.
      shell: bash -l {0}
      run: source continuous_integration/scripts/start_LDAP.sh

    - name: Download SQLite example data.
      shell: bash -l {0}
      run: source continuous_integration/scripts/download_sqlite_data.sh

    - name: Start PostgreSQL service in container.
      shell: bash -l {0}
      run: source continuous_integration/scripts/start_postgres.sh


    - name: Ensure example data is migrated to current catalog database schema.
      # The example data is expected to be kept up to date to the latest Tiled
      # release, but this CI run may include some unreleased schema changes,
      # so we run a migration here.
      shell: bash -l {0}
      run: |
        set -vxeuo pipefail
        tiled catalog upgrade-database sqlite+aiosqlite:///tiled_test_db_sqlite.db
        tiled catalog upgrade-database postgresql+asyncpg://postgres:secret@localhost:5432/tiled-example-data

    - name: Test with pytest
      shell: bash -l {0}
      run: |
        set -vxeuo pipefail
        coverage run -m pytest -v
        coverage report
      env:
        # Provide test suite with a PostgreSQL database to use.
        TILED_TEST_POSTGRESQL_URI: postgresql+asyncpg://postgres:secret@localhost:5432
        # Opt in to LDAPAuthenticator tests.
        TILED_TEST_LDAP: 1

  windows_checks:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.12"]
      fail-fast: false
    steps:

    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install
      run: |
        git fetch --tags --unshallow  # to set __version__ correctly
        set TILED_BUILD_SKIP_UI=1
        python -m pip install '.[all]'
        python -m pip list

    - name: Install test requirements
      run: |
        set TILED_BUILD_SKIP_UI=1
        python -m pip install .[dev]
        python -m pip list

    - name: Test with pytest
      run: pytest -v
